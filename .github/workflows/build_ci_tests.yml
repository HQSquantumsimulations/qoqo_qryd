name: ci_tests_pull_request

on:
  pull_request:
    branches: [main]

jobs:

  test_pyproject_install:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4.4.0
      with:
        python-version: 3.9
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        default: true
    - uses: Swatinem/rust-cache@v1.4.0
    - name: Install dependencies
      run: |
        pip install maturin pytest numpy qoqo
        pip install ./qoqo-qryd
  
  cargo-deny:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: EmbarkStudios/cargo-deny-action@v1
      with:
        log-level: warn
        command: check
        arguments: --all-features
        command-arguments: ""

  build_maturin_builds_linux:
    name: maturin_build-${{ matrix.combinations.runs_on }}
    runs-on: ${{ matrix.combinations.runs_on }}
    strategy:
      matrix:
        combinations: [
          { runs_on: 'ubuntu-latest',  rust: "x86_64-unknown-linux-gnu" },
        ]
        python: [
            {py: '3.7', interpreter: "python3.7"},
            {py: '3.8', interpreter: "python3.8"},
            {py: '3.9', interpreter: "python3.9"},
            {py: '3.10', interpreter: "python3.10"},
            {py: '3.11', interpreter: "python3.11"},
        ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.combinations.rust }}
          default: true
      - uses: Swatinem/rust-cache@v1.4.0
      - uses: actions/setup-python@v4.4.0
        with:
          python-version: ${{ matrix.python.py }}
      - name: linux wheels
        uses: messense/maturin-action@v1
        with:
          maturin-version: latest
          command: build
          manylinux: 2014
          args: -i python${{ matrix.python.py }} --out wheels -m qoqo-qryd/Cargo.toml --release --locked
      - name: test install
        run: |
          pip install wheels/* --force-reinstall

  # build_maturin_builds_windows:
  #   name: maturin_build-${{ matrix.combinations.runs_on }}
  #   needs: deploy_cratesio
  #   runs-on: ${{ matrix.combinations.runs_on }}
  #   strategy:
  #     matrix:
  #       combinations: [
  #         { runs_on: 'windows-latest', rust: "x86_64-pc-windows-msvc" },
  #       ]
  #       python: [
  #           {py: '3.7', interpreter: "python3.7"},
  #           {py: '3.8', interpreter: "python3.8"},
  #           {py: '3.9', interpreter: "python3.9"},
  #           {py: '3.10', interpreter: "python3.10"}  
  #       ]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: stable
  #         target: ${{ matrix.combinations.rust }}
  #         default: true
  #     - uses: actions/setup-python@v4.4.0
  #       with:
  #         python-version: ${{ matrix.python.py }}
  #     - name: windows wheels
  #       uses: messense/maturin-action@v1
  #       with:
  #         maturin-version: latest
  #         command: build
  #         args: -i python --out wheels -m qoqo-qryd/Cargo.toml --release --locked
  #     - name: store artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: py_wheels
  #         path: wheels

