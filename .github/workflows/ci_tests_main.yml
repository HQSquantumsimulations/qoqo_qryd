name: ci_tests_main

on:
  pull_request:
    branches: [main]

jobs:

  unittests_check_linux:
    name: unittests_check-${{ matrix.combinations.runs_on }}
    runs-on: ${{ matrix.combinations.runs_on }}
    strategy:
      matrix:
        combinations: [
          { runs_on: "ubuntu-latest",  rust: "x86_64-unknown-linux-gnu" },
        ]
        python: [
            {py: '3.7', interpreter: "python3.7"},
            {py: '3.8', interpreter: "python3.8"},
            {py: '3.9', interpreter: "python3.9"},
            {py: '3.10', interpreter: "python3.10"},
            {py: '3.11', interpreter: "python3.11"}
        ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.combinations.rust }}
          default: true
          components: rustfmt
      - uses: Swatinem/rust-cache@v1.4.0
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python.py }}
      - run: |
          cd qoqo-qryd
          python -m pip install numpy
          sudo apt install -y clang-12
          cargo test --workspace --no-default-features
          cargo fmt --all -- --check
  
  clippy_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
      - uses: Swatinem/rust-cache@v1.4.0
      - run: |
          cd qoqo-qryd
          sudo apt install -y clang-12
          cargo clippy -- -D warnings
          cargo clippy --tests -- -D warnings

  doctest_check:
    name: unittests_check-${{ matrix.combinations.runs_on }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          default: true
      - uses: Swatinem/rust-cache@v1.4.0
      - run: |
          cd roqoqo-qryd
          cargo test --doc --package=roqoqo-qryd

  test_check_workspace:
    name: unittests_check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          default: true
      - uses: Swatinem/rust-cache@v1.4.0
      - run: |
          cargo test --no-default-features --workspace

  test_check:
    name: cargo_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          default: true
      - uses: Swatinem/rust-cache@v1.4.0
      - name: test_with_api
        env:
        run: |
          QRYD_API_TOKEN: ${{ secrets.QRYD_API_TOKEN }}
          cd roqoqo-qryd
          cargo test --package=roqoqo-qryd